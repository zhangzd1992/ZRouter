
if (isRelease) {
    apply plugin: 'com.android.library'
}else {
    apply plugin: 'com.android.application'
}



def androidId = rootProject.ext.androidId
def appId = rootProject.ext.appId
def dependent = rootProject.ext.dependencies



android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion
    defaultConfig {
        if (!isRelease) {
            applicationId appId.personal
        }
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    dependent.each{
        k , v ->
            implementation v
    }
    implementation project(':common')

    implementation project(':zrouter_annotation')
    annotationProcessor project(':zrouter_compile')
}
